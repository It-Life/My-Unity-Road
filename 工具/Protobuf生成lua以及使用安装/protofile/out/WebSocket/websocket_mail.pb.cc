// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WebSocket/websocket_mail.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WebSocket/websocket_mail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMD_GP_GetMailBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMD_GP_GetMailBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMD_GP_GetMailBox_CMD_GP_MailBox_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_WebSocket_2fwebsocket_5fmail_2eproto() {
  protobuf_AddDesc_WebSocket_2fwebsocket_5fmail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WebSocket/websocket_mail.proto");
  GOOGLE_CHECK(file != NULL);
  CMD_GP_GetMailBox_descriptor_ = file->message_type(0);
  static const int CMD_GP_GetMailBox_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox, mailbox_),
  };
  CMD_GP_GetMailBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMD_GP_GetMailBox_descriptor_,
      CMD_GP_GetMailBox::default_instance_,
      CMD_GP_GetMailBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMD_GP_GetMailBox));
  CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_ = CMD_GP_GetMailBox_descriptor_->nested_type(0);
  static const int CMD_GP_GetMailBox_CMD_GP_MailBox_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, gift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, giftstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, readstatus_),
  };
  CMD_GP_GetMailBox_CMD_GP_MailBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_,
      CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance_,
      CMD_GP_GetMailBox_CMD_GP_MailBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GP_GetMailBox_CMD_GP_MailBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMD_GP_GetMailBox_CMD_GP_MailBox));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WebSocket_2fwebsocket_5fmail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMD_GP_GetMailBox_descriptor_, &CMD_GP_GetMailBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_, &CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_WebSocket_2fwebsocket_5fmail_2eproto() {
  delete CMD_GP_GetMailBox::default_instance_;
  delete CMD_GP_GetMailBox_reflection_;
  delete CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance_;
  delete CMD_GP_GetMailBox_CMD_GP_MailBox_reflection_;
}

void protobuf_AddDesc_WebSocket_2fwebsocket_5fmail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036WebSocket/websocket_mail.proto\"\314\001\n\021CMD"
    "_GP_GetMailBox\0222\n\007mailBox\030\001 \003(\0132!.CMD_GP"
    "_GetMailBox.CMD_GP_MailBox\032\202\001\n\016CMD_GP_Ma"
    "ilBox\022\014\n\004type\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\014\n\004ti"
    "me\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\014\n\004gift\030\005 \001(\t\022"
    "\022\n\ngiftStatus\030\006 \001(\005\022\022\n\nreadStatus\030\007 \001(\005B"
    "!\n\022com.kxqp.kxqp.beanB\013ProtoMailDo", 274);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WebSocket/websocket_mail.proto", &protobuf_RegisterTypes);
  CMD_GP_GetMailBox::default_instance_ = new CMD_GP_GetMailBox();
  CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance_ = new CMD_GP_GetMailBox_CMD_GP_MailBox();
  CMD_GP_GetMailBox::default_instance_->InitAsDefaultInstance();
  CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WebSocket_2fwebsocket_5fmail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WebSocket_2fwebsocket_5fmail_2eproto {
  StaticDescriptorInitializer_WebSocket_2fwebsocket_5fmail_2eproto() {
    protobuf_AddDesc_WebSocket_2fwebsocket_5fmail_2eproto();
  }
} static_descriptor_initializer_WebSocket_2fwebsocket_5fmail_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kTypeFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kTitleFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kTimeFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kContentFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kGiftFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kGiftStatusFieldNumber;
const int CMD_GP_GetMailBox_CMD_GP_MailBox::kReadStatusFieldNumber;
#endif  // !_MSC_VER

CMD_GP_GetMailBox_CMD_GP_MailBox::CMD_GP_GetMailBox_CMD_GP_MailBox()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::InitAsDefaultInstance() {
}

CMD_GP_GetMailBox_CMD_GP_MailBox::CMD_GP_GetMailBox_CMD_GP_MailBox(const CMD_GP_GetMailBox_CMD_GP_MailBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gift_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  giftstatus_ = 0;
  readstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMD_GP_GetMailBox_CMD_GP_MailBox::~CMD_GP_GetMailBox_CMD_GP_MailBox() {
  SharedDtor();
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    delete time_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (gift_ != &::google::protobuf::internal::kEmptyString) {
    delete gift_;
  }
  if (this != default_instance_) {
  }
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_GP_GetMailBox_CMD_GP_MailBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_;
}

const CMD_GP_GetMailBox_CMD_GP_MailBox& CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebSocket_2fwebsocket_5fmail_2eproto();
  return *default_instance_;
}

CMD_GP_GetMailBox_CMD_GP_MailBox* CMD_GP_GetMailBox_CMD_GP_MailBox::default_instance_ = NULL;

CMD_GP_GetMailBox_CMD_GP_MailBox* CMD_GP_GetMailBox_CMD_GP_MailBox::New() const {
  return new CMD_GP_GetMailBox_CMD_GP_MailBox;
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_time()) {
      if (time_ != &::google::protobuf::internal::kEmptyString) {
        time_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    if (has_gift()) {
      if (gift_ != &::google::protobuf::internal::kEmptyString) {
        gift_->clear();
      }
    }
    giftstatus_ = 0;
    readstatus_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMD_GP_GetMailBox_CMD_GP_MailBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_time;
        break;
      }

      // optional string time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional string content = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_gift;
        break;
      }

      // optional string gift = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gift().data(), this->gift().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_giftStatus;
        break;
      }

      // optional int32 giftStatus = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_giftStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftstatus_)));
          set_has_giftstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_readStatus;
        break;
      }

      // optional int32 readStatus = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &readstatus_)));
          set_has_readstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->title(), output);
  }

  // optional string time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->time(), output);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->content(), output);
  }

  // optional string gift = 5;
  if (has_gift()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gift().data(), this->gift().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->gift(), output);
  }

  // optional int32 giftStatus = 6;
  if (has_giftstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->giftstatus(), output);
  }

  // optional int32 readStatus = 7;
  if (has_readstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->readstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMD_GP_GetMailBox_CMD_GP_MailBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->time(), target);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // optional string gift = 5;
  if (has_gift()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gift().data(), this->gift().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gift(), target);
  }

  // optional int32 giftStatus = 6;
  if (has_giftstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->giftstatus(), target);
  }

  // optional int32 readStatus = 7;
  if (has_readstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->readstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMD_GP_GetMailBox_CMD_GP_MailBox::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string gift = 5;
    if (has_gift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift());
    }

    // optional int32 giftStatus = 6;
    if (has_giftstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftstatus());
    }

    // optional int32 readStatus = 7;
    if (has_readstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->readstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMD_GP_GetMailBox_CMD_GP_MailBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMD_GP_GetMailBox_CMD_GP_MailBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::MergeFrom(const CMD_GP_GetMailBox_CMD_GP_MailBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_gift()) {
      set_gift(from.gift());
    }
    if (from.has_giftstatus()) {
      set_giftstatus(from.giftstatus());
    }
    if (from.has_readstatus()) {
      set_readstatus(from.readstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::CopyFrom(const CMD_GP_GetMailBox_CMD_GP_MailBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_GP_GetMailBox_CMD_GP_MailBox::IsInitialized() const {

  return true;
}

void CMD_GP_GetMailBox_CMD_GP_MailBox::Swap(CMD_GP_GetMailBox_CMD_GP_MailBox* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(time_, other->time_);
    std::swap(content_, other->content_);
    std::swap(gift_, other->gift_);
    std::swap(giftstatus_, other->giftstatus_);
    std::swap(readstatus_, other->readstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMD_GP_GetMailBox_CMD_GP_MailBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMD_GP_GetMailBox_CMD_GP_MailBox_descriptor_;
  metadata.reflection = CMD_GP_GetMailBox_CMD_GP_MailBox_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CMD_GP_GetMailBox::kMailBoxFieldNumber;
#endif  // !_MSC_VER

CMD_GP_GetMailBox::CMD_GP_GetMailBox()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMD_GP_GetMailBox::InitAsDefaultInstance() {
}

CMD_GP_GetMailBox::CMD_GP_GetMailBox(const CMD_GP_GetMailBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMD_GP_GetMailBox::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMD_GP_GetMailBox::~CMD_GP_GetMailBox() {
  SharedDtor();
}

void CMD_GP_GetMailBox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMD_GP_GetMailBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_GP_GetMailBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMD_GP_GetMailBox_descriptor_;
}

const CMD_GP_GetMailBox& CMD_GP_GetMailBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WebSocket_2fwebsocket_5fmail_2eproto();
  return *default_instance_;
}

CMD_GP_GetMailBox* CMD_GP_GetMailBox::default_instance_ = NULL;

CMD_GP_GetMailBox* CMD_GP_GetMailBox::New() const {
  return new CMD_GP_GetMailBox;
}

void CMD_GP_GetMailBox::Clear() {
  mailbox_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMD_GP_GetMailBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMD_GP_GetMailBox.CMD_GP_MailBox mailBox = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mailBox:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mailbox()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mailBox;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMD_GP_GetMailBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .CMD_GP_GetMailBox.CMD_GP_MailBox mailBox = 1;
  for (int i = 0; i < this->mailbox_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mailbox(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMD_GP_GetMailBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .CMD_GP_GetMailBox.CMD_GP_MailBox mailBox = 1;
  for (int i = 0; i < this->mailbox_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mailbox(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMD_GP_GetMailBox::ByteSize() const {
  int total_size = 0;

  // repeated .CMD_GP_GetMailBox.CMD_GP_MailBox mailBox = 1;
  total_size += 1 * this->mailbox_size();
  for (int i = 0; i < this->mailbox_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mailbox(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_GP_GetMailBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMD_GP_GetMailBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMD_GP_GetMailBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMD_GP_GetMailBox::MergeFrom(const CMD_GP_GetMailBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  mailbox_.MergeFrom(from.mailbox_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMD_GP_GetMailBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_GP_GetMailBox::CopyFrom(const CMD_GP_GetMailBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_GP_GetMailBox::IsInitialized() const {

  return true;
}

void CMD_GP_GetMailBox::Swap(CMD_GP_GetMailBox* other) {
  if (other != this) {
    mailbox_.Swap(&other->mailbox_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMD_GP_GetMailBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMD_GP_GetMailBox_descriptor_;
  metadata.reflection = CMD_GP_GetMailBox_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
